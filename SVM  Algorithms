from sklearn.datasets import load_iris
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
iris=load_iris()
iris

import pandas as pd


irisdf=pd.DataFrame(iris.data,columns=iris.feature_names)
irisdf

sepal_length=irisdf.iloc[:,0]
pedal_length=irisdf.iloc[:,2]

import numpy as np
x=irisdf.iloc[:,0:2].values
x

c=iris["target"]
c

plt.scatter(sepal_length,pedal_length,c=c)
plt.show()

x_train,x_test,y_train,y_test=train_test_split(x,c,test_size=0.25,random_state=0)

from sklearn.svm import SVC


cls = SVC(kernel='linear',random_state=0)
cls.fit(x_train,y_train)

y_pred=cls.predict(x_test)
y_pred

y_test

from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score

results=confusion_matrix(y_test,y_pred)
print('confusion matrix')
print(results)
print('accuracy score:',accuracy_score(y_test,y_pred))



!pip install mlxtend


from mlxtend.plotting import plot_decision_regions

plot_decision_regions(X=x_test,y=y_test,clf=cls,legend=2)

